# This script is provided by github.com/bool64/dev.

# This script uploads application binaries as GitHub release assets.
name: release-assets
on:
  pull_request:
  release:
    types:
      - created
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: Upload Release Assets
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go stable
        if: env.GO_VERSION != 'tip'
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build artifacts
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake wget
          mkdir ~/dlib && cd ~/dlib && wget http://dlib.net/files/dlib-19.24.tar.bz2 && tar xf dlib-19.24.tar.bz2
          cd ~/dlib/dlib-19.24 && mkdir build && cd build && cmake .. && cmake --build . --config Release && sudo make install && rm -rf ~/dlib
          sudo cp /usr/local/include/dlib/external/libjpeg/jpeglib.h /usr/include/jpeglib.h 
          sudo cp /usr/local/include/dlib/external/libjpeg/jconfig.h /usr/include/jconfig.h
          sudo cp /usr/local/include/dlib/external/libjpeg/jmorecfg.h /usr/include/jmorecfg.h
          CGO_LDFLAGS="-static" CGO_ENABLED=1 /usr/local/go/bin/go build .
          ldd ./faces
          ./faces -help
      - name: Upload linux_amd64.tar.gz
        if: hashFiles('linux_amd64.tar.gz') != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./linux_amd64.tar.gz
          asset_name: linux_amd64.tar.gz
          asset_content_type: application/tar+gzip
